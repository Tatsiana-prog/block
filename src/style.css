@charset "UTF-8";
@font-face {
  font-family: "Arial";
  src: url("/public/fonts/Arial/Arial.woff") format("woff"), url("/public/fonts/Arial/Arial.ttf") format("ttf");
  /* Дополнительные форматы шрифтов, если необходимо */
}
/* Mixins */
/* Reset and base styles  */
* {
  padding: 0px;
  margin: 0px;
  border: none;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

a, a:visited {
  text-decoration: none;
  display: block;
}

a:hover {
  color: inherit;
  text-decoration: none;
}

a:focus,
a:active {
  outline: none;
}

/* Common */
aside, nav, footer, header, section, main {
  display: block;
}

h1, h2, h3, h4, h5, h6, p {
  font-size: inherit;
  font-weight: inherit;
}

ul {
  list-style: none;
}

img, svg {
  display: block;
  height: auto;
}

/* Form */
input, textarea, button, select {
  font-family: inherit;
  font-size: inherit;
}

input::-ms-clear {
  display: none;
}

button, input[type=submit] {
  display: inline-block;
  box-shadow: none;
  background-color: transparent;
  background: none;
  cursor: pointer;
}

input:focus, input:active,
button:focus, button:active {
  outline: none;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

label {
  cursor: pointer;
}

legend {
  display: block;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  max-height: 10000000px;
  min-height: 100vh;
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  font-family: "Arial", sans-serif;
  color: #fff;
  background: #000000;
  text-rendering: optimizeSpeed;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  scroll-behavior: smooth;
  overflow: auto;
}

body > * {
  flex-shrink: 0; /* sticky footer */
}

/* Grid styles */
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

img {
  object-fit: cover;
}

section {
  width: 100%;
  margin: 0 auto;
  overflow: hidden;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes textUp {
  0% {
    transform: translateY(100px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes slideLeft {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0; /* Уменьшаем прозрачность при сдвиге */
  }
}
.menu-btns {
  margin: 0 auto;
  animation: text-up ease-in 0.3s;
  height: 60px;
  text-align: center;
}

.btn {
  position: relative;
  display: inline-block;
  padding: 10px 20px; /* Добавим фиксированный отступ  */
  font-size: 15px;
  cursor: pointer;
  text-align: center;
  margin-right: 20px;
  animation: fadeIn ease-in 0.5s;
  transition: all 0.3s ease; /* Плавный переход для цвета и трансформации */
}
.btn:last-child {
  margin-right: 0;
}

.btn:hover, .btn:active {
  padding: 5px 15px;
}
.btn:hover .main-text, .btn:active .main-text {
  color: rgb(55, 119, 157);
  font-size: 20px; /* Увеличение шрифта при наведении */
}
.btn:hover .reflection, .btn:active .reflection {
  top: 175%;
  animation: fadeIn ease 0.5s;
  opacity: 1; /* Установка прозрачности отражения */
}

.btn .main-text {
  color: rgba(255, 255, 255, 0.6);
  font-size: 15px;
  position: relative;
  font-weight: 700;
  z-index: 2; /* Основной текст выше отраженного */
  transition: color 0.3s ease, font-size 0.3s ease; /* Плавный переход для цвета и размера текста */
}

.btn .reflection {
  position: absolute;
  top: 150%; /* Размещаем отражение ниже основного текста */
  left: 0;
  width: 100%;
  transform: scaleY(-1); /* Зеркалим отражённый текст по вертикали */
  transform-origin: top;
  font-size: 20px;
  font-weight: 700;
  line-height: 26px;
  text-underline-position: from-font;
  text-decoration-skip-ink: none;
  background: linear-gradient(105.82deg, #08466B -43.96%, #37779D -5.6%, #71BDEB 43.21%, #37779D 109.46%, #08466B 157.91%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  opacity: 0; /* Изначально скрыто */
  filter: blur(2px);
  transition: all 0.3s ease; /* Плавный переход для прозрачности и размытия */
}

.description-button {
  width: 300px;
  height: 50px;
  position: absolute;
  background: rgba(144, 15, 55, 0.9);
  border-radius: 5px;
  border: 1px solid grey; /* Устанавливаем ширину бордера */
  bottom: -35px; /* Отступ от нижней части родителя */
  left: 50%; /* Установка на 50% от левой стороны родителя */
  transform: translateX(-50%); /* Сдвиг элемента на 50% его ширины */
  text-align: center; /* Центрирование текста */
  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.7); /* Тень по контуру кнопки */
}

.button {
  display: inline-flex;
  justify-content: center;
  padding: 16px 40px;
  font-family: "Arial", sans-serif;
  font-size: 17px;
  font-weight: 900;
  text-transform: uppercase;
  background: linear-gradient(to right, #727272, #B1B1B1, #E8E8E8, #A4A4A4, #424242);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/*
vars
*/
:root {
  --carousel-transition-duration: 250ms;
  --carousel-transition-ease: ease-out;
  --carousel-bg-color-rgb: 0, 0, 0;
  --carousel-shadow-color-rgb: 128, 128, 128;
  --carousel-item-width: 17.5rem;
  --carousel-item-height: 11.5rem;
  --carousel-item-hover-effect: 1.075;
  --carousel-item-reflection-blur: 0.25rem;
  --carousel-item-empty-color-rgb: 255, 255, 255;
  --carousel-item-glow-color-rgb: 255, 255, 255;
  --carousel-item-glow-size: 5rem;
  --carousel-diameter: 50rem;
  --carousel-3d-perspective: 1000px;
  --carousel-3d-perspective-origin: 50% 20%;
  --carousel-control-button-width: 1.25rem;
  --carousel-control-button-height: 4rem;
  --carousel-control-color-rgb: 255, 255, 255;
  --carousel-animation-duration: 25s;
  --carousel-animation-play-state: running;
  --carousel-direction-animation-play-state: paused;
}

/*
global
*/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

*:focus {
  outline: none;
}

a {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/*
carousel
*/
.carousel {
  --_diameter: var(--carousel-diameter);
  --_radius: calc(var(--_diameter) / 2);
  --_item-width: var(--carousel-item-width);
  --_item-height: var(--carousel-item-height);
  perspective: var(--carousel-3d-perspective);
  perspective-origin: var(--carousel-3d-perspective-origin);
  width: 700px;
  height: 500px;
  margin: 0 auto;
  margin: 0 auto 100px auto;
  /* border: 1px solid #ffffff; */
}

@media only screen and (max-width: 48rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * 0.75);
    --_item-width: calc(var(--carousel-item-width) * 0.75);
    --_item-height: calc(var(--carousel-item-height) * 0.75);
  }
}
@media only screen and (max-width: 32rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * 0.6);
    --_item-width: calc(var(--carousel-item-width) * 0.6);
    --_item-height: calc(var(--carousel-item-height) * 0.6);
  }
}
@media only screen and (max-width: 16rem) {
  .carousel {
    --_diameter: calc(var(--carousel-diameter) * 0.25);
    --_item-width: calc(var(--carousel-item-width) * 0.25);
    --_item-height: calc(var(--carousel-item-height) * 0.25);
  }
}
.carousel .carousel-control-button {
  --_width: var(--carousel-control-button-width);
  --_height: var(--carousel-control-button-height);
  z-index: 1;
  width: var(--_width);
  height: var(--_height);
  background-color: rgb(var(--carousel-control-color-rgb));
  opacity: 0.2;
  transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
  position: absolute;
}

.carousel .carousel-control-button:hover {
  opacity: 0.4;
}

.carousel .carousel-control-button:has(input:checked) {
  opacity: 0.8;
}

.carousel .carousel-control-button input {
  -webkit-appearance: none;
  appearance: none;
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.carousel .carousel-control-button.left {
  clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
  top: calc(var(--_radius) - var(--_height) / 2);
  left: 0;
}

.carousel:has(.carousel-control-button.left input:checked) {
  --carousel-direction-animation-play-state: running;
}

.carousel .carousel-control-button.right {
  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
  top: calc(var(--_radius) - var(--_height) / 2);
  right: 0;
}

.carousel:has(.carousel-control-button.right input:checked) {
  --carousel-direction-animation-play-state: paused;
}

.carousel .carousel-rotation-direction {
  --_direction-animation-play-state: var(
  	--carousel-direction-animation-play-state
  );
  --_z: calc(var(--_radius) * -1);
  transform: translateZ(var(--_z));
  transform-style: preserve-3d;
  animation: carousel-rotation-reverse calc(var(--carousel-animation-duration) / 2) reverse linear infinite var(--_direction-animation-play-state);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
}

@keyframes carousel-rotation-reverse {
  from {
    transform: translateZ(var(--_z)) rotateY(0deg);
  }
  to {
    transform: translateZ(var(--_z)) rotateY(360deg);
  }
}
@keyframes carousel-rotation-normal {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(360deg);
  }
}
.carousel .carousel-item-wrapper {
  transform-style: inherit;
  width: inherit;
  height: inherit;
  list-style-type: none;
  position: relative;
  animation: carousel-rotation-normal var(--carousel-animation-duration) normal linear infinite var(--carousel-animation-play-state);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
}

.carousel .carousel-rotation-direction:has(.carousel-item:hover) {
  --carousel-animation-play-state: paused;
  --_direction-animation-play-state: paused;
}

.carousel .carousel-item {
  --_width: var(--_item-width);
  --_height: var(--_item-height);
  --_theta-start: 0;
  --_theta-length: calc(2 * 3.141592653589793);
  --_segment: calc(
  	var(--_theta-start) + var(--_index) / var(--_num-elements) *
  		var(--_theta-length)
  );
  --_x: calc(var(--_radius) * cos(var(--_segment)));
  --_y: 0;
  --_z: calc(var(--_radius) * sin(var(--_segment)));
  --_final-x: var(--_x);
  --_final-y: var(--_y);
  --_final-z: var(--_z);
  --_rotation-y: atan2(var(--_x), var(--_z));
  left: calc(var(--_radius) - var(--_item-width) / 2);
  top: calc(var(--_radius) - var(--_item-height) / 2);
  transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z));
  transform-style: inherit;
  width: var(--_width);
  height: var(--_height);
  box-shadow: 0 0 var(--carousel-item-glow-size) transparent;
  animation: carousel-item-rotation-reverse calc(var(--carousel-animation-duration) / 2) reverse linear infinite var(--_direction-animation-play-state);
  position: absolute;
}

@keyframes carousel-item-rotation-reverse {
  from {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z)) rotateY(360deg);
  }
  to {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z)) rotateY(0deg);
  }
}
@keyframes carousel-item-rotation-normal {
  from {
    transform: rotateY(360deg);
  }
  to {
    transform: rotateY(0deg);
  }
}
.carousel .carousel-item a {
  display: block;
  width: inherit;
  height: inherit;
  text-indent: -9999px;
  background-color: rgba(var(--carousel-item-empty-color-rgb), 0.5);
  background-image: var(--_image-url);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  perspective: var(--carousel-3d-perspective);
  perspective-origin: var(--carousel-3d-perspective-origin);
  transition: all var(--carousel-transition-duration) var(--carousel-transition-ease);
  animation: carousel-item-rotation-normal var(--carousel-animation-duration) normal linear infinite var(--carousel-animation-play-state);
  position: relative;
}

.carousel .carousel-item:hover a {
  filter: grayscale(0%);
  box-shadow: 0 0 var(--carousel-item-glow-size) rgb(var(--carousel-item-glow-color-rgb));
}

.carousel .carousel-item a::before {
  content: "";
  width: inherit;
  height: inherit;
  background-color: rgba(var(--carousel-item-empty-color-rgb), 0.5);
  background-image: linear-gradient(to top, rgba(var(--carousel-bg-color-rgb), 0.25) 0%, rgba(var(--carousel-bg-color-rgb), 1) 75%), var(--_image-url);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  pointer-events: none;
  top: calc(var(--carousel-item-reflection-blur) * -1);
  left: 0;
  filter: blur(var(--carousel-item-reflection-blur)) grayscale(100%);
  transition: filter var(--carousel-transition-duration) var(--carousel-transition-ease);
  transform-origin: center bottom;
  transform: rotateX(90deg) rotateZ(180deg) rotateY(180deg);
  position: absolute;
}

.carousel .carousel-item:hover a::before {
  filter: blur(var(--carousel-item-reflection-blur)) grayscale(0%);
}

.carousel .carousel-ground {
  --_width: var(--_diameter);
  --_height: var(--_diameter);
  --_rotation: 90deg;
  left: calc(var(--_radius) - var(--_width) / 2);
  top: calc(var(--_radius) - var(--_height) / 2);
  transform: rotateX(var(--_rotation)) translateZ(calc(var(--_item-height) / -2));
  width: var(--_width);
  height: var(--_height);
  border-radius: 50%;
  background: radial-gradient(rgba(var(--carousel-shadow-color-rgb), 0.75) 15%, rgba(var(--carousel-bg-color-rgb), 0) 60%);
  opacity: 0.5;
  transition: opacity var(--carousel-transition-duration) var(--carousel-transition-ease);
  position: absolute;
}

.carousel .carousel-item-wrapper:has(.carousel-item:hover) .carousel-ground {
  opacity: 0.75;
}

.section-direction {
  padding: 50px 0;
}

.direction-row {
  display: flex;
  justify-content: center;
  align-items: center; /* Центрирование по вертикали (если нужно) */
}

.direction-title {
  display: inline-flex;
  justify-content: center;
  font-family: "Arial", sans-serif;
  font-size: 36px;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 43.2px;
  background: linear-gradient(to right, #727272, #B1B1B1, #E8E8E8, #A4A4A4, #424242);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.direction-slider {
  margin: 0 auto 200px auto;
}

.direction-desc {
  width: 100%;
  margin: 0 auto;
}

.direction-boxes {
  position: relative;
  height: 183px;
  margin: 37px 0;
  padding: 30px 0 61px 0;
  background: linear-gradient(90deg, rgba(29, 29, 29, 0.36) 0%, rgba(131, 131, 131, 0.36) 50%, rgba(29, 29, 29, 0.36) 100%);
  border: 5px solid; /* Устанавливаем ширину бордера */
  border-image-source: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #FFFFFF 50%, rgba(255, 255, 255, 0) 100%);
  border-image-slice: 1; /* Задаем, как делить изображение (градиент) */
  border-image-width: 1px; /* Устанавливаем ширину бордера */
}

.blocks-wrapper {
  margin: 0 auto;
  position: relative;
  width: 1100px;
  height: 118px;
  text-align: center;
  overflow: hidden; /* Скрываем выходящие элементы */
}

.block {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  font-weight: 500;
  color: white;
  opacity: 0;
}

@keyframes slideLeft {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0; /* Уменьшаем прозрачность при сдвиге */
  }
}
@keyframes slideIn {
  from {
    transform: translateX(-100%); /* Начинаем слева */
    opacity: 0; /* Начальная прозрачность */
  }
  to {
    transform: translateX(0);
    opacity: 1; /* Конечная прозрачность */
  }
}
.slide-in {
  animation: slideIn 1s ease-in-out forwards;
}

.slide-left {
  animation: slideLeft 2s ease-in-out forwards;
}

/*# sourceMappingURL=style.css.map */
